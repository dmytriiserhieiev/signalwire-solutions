<div id="videoRoot">
<div>
  <button id="connectSw" onclick="toggleCall();">Connect</button>
  <button id="muteUnmute" onclick="toggleAudio();" data-audio="true" style="display: none;">Mute</button>
</div>

<script type="text/javascript" src="https://webrtc.github.io/adapter/adapter-latest.js"></script>
<script src="https://unpkg.com/@signalwire/js"></script>
<script>const _reportingUrl = "<%= ENV['REPORTING_URL'] || 'http://localhost:4567/report' %>";</script>

<script>
var _room = null;
var _memberList = null;

async function logEvent(name, member, talking = null) {

  payload = {name, member, talking};
  const response = await fetch(_reportingUrl, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(payload)
  });
  return response.json();
}

window.ready = (callback) => {
  if (document.readyState != 'loading') {
    callback()
  } else if (document.addEventListener) {
    document.addEventListener('DOMContentLoaded', callback)
  } else {
    document.attachEvent('onreadystatechange', function () {
      if (document.readyState != 'loading') {
        callback()
      }
    })
  }
}


function toggleAudio() {
  const muteBtn = document.getElementById('muteUnmute');
  if (muteBtn.dataset.audio =="true") {
    // we mute ourselves
    muteBtn.dataset.audio = "false"
    muteBtn.innerText = "Unmute";
    _room.audioMute();
  } else {
    // we unmute
    muteBtn.dataset.audio = "true"
    muteBtn.innerText = "Mute";
    _room.audioUnmute();
  }
}

async function toggleCall() {
  const callBtn = document.getElementById('connectSw');
  const muteBtn = document.getElementById('muteUnmute');

  if (_room) {
    callBtn.innerText = "Connect";
    muteBtn.innerText = "Mute";
    muteBtn.dataset.audio = "true"
    muteBtn.style.display = "none";
    _room.leave();
    _room = null;
  } else {
    const resp = await fetchToken();
    joinRoom(resp.token, 'videoRoot');
    callBtn.innerText = "Hangup";
    muteBtn.style.display = "block";
  }
}

async function fetchToken() {
  const response = await fetch('/token', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({})
  });
  return response.json();
}

function joinRoom(token, rootId) {
  _room = new SignalWire.Video.RoomSession({
    token: token,
    // rootElement: document.getElementById(rootId),
    audio: true,
    video: false
  })

  _room.on('room.joined', async (params) => {
    await _room.hideVideoMuted();
  })

  _room.on("member.joined", (e) => {
    logEvent("member.joined", e.member.name)
  });
  _room.on("member.left", (e) => {
    logEvent("member.left", e.member.name)
  });
  _room.on("member.talking", (e) => {
    const member = _memberList.find(element => element.id == e.member.id)
    logEvent("member.talking", member.name, e.member.talking);
  });
  _room.on("memberList.updated", (e) => {
    _memberList = e.members;
  });

  _room.join();
}
window.ready(function () {

});
</script>